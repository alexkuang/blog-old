<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[alex kuang]]></title>
  <link href="http://alexkuang.github.io/atom.xml" rel="self"/>
  <link href="http://alexkuang.github.io/"/>
  <updated>2014-04-12T23:04:53-04:00</updated>
  <id>http://alexkuang.github.io/</id>
  <author>
    <name><![CDATA[Alex Kuang]]></name>
    
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Shepherd's Pie - Week 10, Australian]]></title>
    <link href="http://alexkuang.github.io/blog/2014/04/12/shepherds-pie-week-10-australian/"/>
    <updated>2014-04-12T22:37:00-04:00</updated>
    <id>http://alexkuang.github.io/blog/2014/04/12/shepherds-pie-week-10-australian</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Shepherds-Pie/i-hnc6sSv/0/L/DSC_2915-L.jpg"></p>

<p>Alright, so I cheated a little bit.  Despite extensive (not really) research, I couldn&rsquo;t find anything in the top google
results for Australian that really clicked.  At least, anything using conventional ingredients; I didn&rsquo;t quite get the
chance to special-order some kangaroo.  Since I&rsquo;m told meat pies are popular in Australia and the lamb was technically
from there, it still counts&hellip;  Right?</p>

<!-- more -->


<p>Even though it&rsquo;s technically an Aussie theme, I went with a more british twist on the ingredients, especially with the
Worcestershire sauce.  The following makes enough to modestly feed 4 off a pretty decent size tray.  <em>No, I don&rsquo;t have
exact dimensions for the tray, it&rsquo;s a meat pie, eyeball it FFS.</em></p>

<ul>
<li>1 lb ground lamb</li>
<li>1 lb yellow potato, heavy cream</li>
<li>Stock, preferably beef</li>
<li>A dash (or 3) Worcestershire sauce</li>
<li>1 tbsp tomato paste</li>
<li>Carrots &lsquo;n peas (or other vegetables)</li>
<li>Garlic</li>
<li>Thyme</li>
</ul>


<p>First off, the meez.  Chop up the garlic, pick the thyme leaves, and finely dice the vegetables, if applicable.  In my
case, it&rsquo;s more like &ldquo;take the bag out of the freezer.&rdquo;  Seriously, for carrots and peas in something like meat pie,
frozen works best.</p>

<p>Put a nice heavy pan on the stove and get it ripping hot.  Add the lamb and garlic, and let the meat get some color.
Don&rsquo;t jab at it or anything for the first few minutes; we want it to fry, not boil.</p>

<p>After it gets a nice dark brown color, start stirring and breaking it apart into tiny pieces.  When it&rsquo;s done, you
should hear sizzling from fat, not hissing from steam&mdash;this should take 10, 15 minutes or so.</p>

<p>Stir in the worcestershire sauce and tomato paste, then add the thyme and beef stock.  How much beef stock is pretty
subjective: I use just enough to mix with the tomato paste for a gravy-ish texture.  The key is not so little that
everything is dry, but not so much that it bubbles over in the oven.  If I had to guess, I&rsquo;d say it&rsquo;s just shy of 2
cups, but perhaps a picture of the end product would be helpful?</p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Shepherds-Pie/i-kZsbxX3/0/L/DSC_2895-L.jpg"></p>

<p>Put a lid on, and let it simmer on very low heat for at least 30-40 minutes, preferably an hour, just to let everything
come together.  Alternately, popping the pan in the oven at ~300-350 also works.</p>

<p>Preheat the oven to 400.  While the meat is going and the oven is warming, prepare the mash.  I really hope I don&rsquo;t have
to provide detailed instructions for that&hellip;  If that&rsquo;s needed, there&rsquo;s always google.</p>

<p>When the meat is done, stick it in a tray and spread the mash on top.  Score with a fork for effect, if desired.  Then
stick into the oven again for about 30 minutes to finish everything off and brown the top a bit.  For presentation, I
bet some eggwash would help with the browning, but I&rsquo;ve never found it necessary.</p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Shepherds-Pie/i-qMkv5Mz/0/L/DSC_2908-L.jpg"></p>

<p>In this particular attempt, I added a bit too much stock and it ended up bubbling out onto the potato.  Still delicious,
though.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Curry Chicken Galantine]]></title>
    <link href="http://alexkuang.github.io/blog/2014/03/30/curry-chicken-galantine/"/>
    <updated>2014-03-30T21:30:00-04:00</updated>
    <id>http://alexkuang.github.io/blog/2014/03/30/curry-chicken-galantine</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Curry-Chicken-Galantine/i-K79mZTH/0/L/DSC_2867-L.jpg"></p>

<p><em>What?!  A food post that isn&rsquo;t themed?!</em>  That&rsquo;s right.  While the 52weeks deal resulted in consistency, doing only
those posts all the time got a bit stale, so I decided to go a bit off the beaten path.  This dish was inspired by what
is still one of the coolest videos I&rsquo;ve ever seen: <a href="https://www.youtube.com/watch?v=kAekQ5fzfGM">Jacques Pepin deboning an entire chicken</a>.
A Galantine is a French (big surprise) technique where all of the bones are removed from a chicken, but the meat and
skin is kept intact like the remains of some sort of creepy skinwalker type transformation.   Everything is then
stuffed, rolled up, and roasted.</p>

<p>Despite its simplicity, it&rsquo;s one of the coolest techniques I have ever seen, and it makes carving much much easier
since you don&rsquo;t have any bones to contend with while grappling a hot chicken fresh out of the oven.  I&rsquo;ve only done this
a few times, and it&rsquo;s already become my de-facto method for preparing whole chicken&mdash;the cool factor, the corpse
desecration, the ease of plating&hellip;  What&rsquo;s not to like?</p>

<!-- more -->


<h3>Why Curry</h3>

<p>For this particular chicken, I decided to combine a thoroughly French technique with thoroughly un-French
flavors&mdash;Curry.</p>

<p>Even though I&rsquo;m all elitist and tend mix my own spices nowadays, my childhood was spent eating curries made with instant
powder mixes.  (<em>For the record, nothing wrong with curry powder mixes, assuming they&rsquo;re made from actual spices&hellip;</em>)
The most common of these was Madras Curry, particularly <a href="http://vietwah.com/Joomla/components/com_virtuemart/shop_image/product/fab54182fc7c87449f726b0e7cb3bec9.jpg">this brand</a>.
If the image link breaks, just google &ldquo;Ca Ri An Do&rdquo;.  It&rsquo;s a pretty unremarkable curry based heavily in turmeric,
definitely tending more towards the mild flavors that the Chinese/Japanese tend to flavor rather than the ripping hot
Vindaloo style you can see with some of the Indian curries.</p>

<p>But one of the problems I&rsquo;ve always had with this one in particular was that the sauce would have to get really thick
for the flavor to come out in the chicken.  In this past I&rsquo;d done this with judicious (read: heavy-handed) use of cream,
starch from potatoes, and reduction of liquid, but it never really got to the level I would have liked.  So when I was
thinking about variations on a Galantine, doing a stuffing with this curry powder was just about the first thing that
came to mind.</p>

<h3>The Chicken</h3>

<p>I can&rsquo;t possibly explain the technique behind a Galantine as well as the man himself, so if you didn&rsquo;t click on the
video link above, I suggest you do.  Go on.  I&rsquo;ll even put it down here as well.</p>

<p><a href="https://www.youtube.com/watch?v=kAekQ5fzfGM">Link</a></p>

<p>Watched it?  Good.  Pretty awesome, isn&rsquo;t it?  The stuffing is pretty simple:</p>

<ol>
<li>Finely dice yukon potatoes and carrots, and boil until tender</li>
<li>Mash up with a fork, dumping in generous helpings of curry powder and a pinch of salt</li>
<li>Add a touch of heavy cream for consistency, and because cream is delicious.</li>
</ol>


<p>In essence it was a rustic mashed potato.  I&rsquo;m sure a super fancy restaurant could do a potato and carrot puree or
something, but ain&rsquo;t nobody got time for that in this kitchen.  Stuff the chicken, truss it up, dust it with more curry
powder and salt, and stick it in the oven.  I stole my roasting technique from Thomas Keller&mdash;450 for ~25 minutes, then
370 until the internal temp of the thickest part of the thigh is 160&mdash;but really, whatever works.  Afterwards I just
made a sauce by deglazing the stuff in the roasting pan with some cream, and&mdash;<em>voila!</em></p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Curry-Chicken-Galantine/i-46XNmjz/0/L/DSC_2864-L.jpg"></p>

<p>Some people might say this technique is a bit old fashioned, but screw them.  Clearly they&rsquo;ve never deboned a chicken
with their hands&mdash;It&rsquo;s like ripping off a scab, except a million times more satisfying.  And delicious.  And chicken
wing lollipops?  Come on.  Ridiculous.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Anime Boston 2014]]></title>
    <link href="http://alexkuang.github.io/blog/2014/03/23/anime-boston-2014/"/>
    <updated>2014-03-23T21:39:00-04:00</updated>
    <id>http://alexkuang.github.io/blog/2014/03/23/anime-boston-2014</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://waffleparadox.smugmug.com/Events/Anime-Boston-2014/i-8K2GL55/0/L/DSC_2822-L.jpg"></p>

<p>It&rsquo;s been years since I&rsquo;ve been to Anime Boston, or any other sort of nerdy/geeky gathering.  Maybe it was me drifting
away from the subculture and slowly becoming a filthy casual.  Maybe it was moving 40 miles &lt;&ndash; that way and not having a
car.  Or maybe it was the fact that they switched from nifty plastic convention badges to the slightly ghetto
paper-in-sleeve setup that they still had going this year.  For those who remember the cards&mdash;<em>yes, it&rsquo;s been that
long.</em></p>

<p>So when I was dropping by Copley this weekend to revisit some old watering holes and found out the convention was in
town, I figured why not?  I had some time to kill, and the registration lines looked pretty short.  I ended up only
staying the afternoon since my con-going stamina isn&rsquo;t what it used to be <em>(refer above to casual status)</em>, but here are
some quick impressions.</p>

<!-- more -->


<h3>Attack on Titan</h3>

<p><img class="center" src="http://waffleparadox.smugmug.com/Events/Anime-Boston-2014/i-QzFKFvb/0/L/DSC_2842-L.jpg"></p>

<p>To the surprise of absolutely nobody there, there was a lot of Attack on Titan this year.  Hell, even I managed to watch
it, and I&rsquo;ve been living under a proverbial anime rock.  Of course, there are the requisite calls of &ldquo;BEST ANIME EVER&rdquo;,
but I&rsquo;m not convinced that will hold after a few years.  Yes, it&rsquo;s solid.  And yes, it&rsquo;s a breath of fresh air in a sea of
Naruto and Bleach and all that.</p>

<p>At the end of the day, it&rsquo;s easy to tell good anime from bad, but a bit harder to predict whether they will have staying
power a la Cowboy Bebop, or slowly fizzle out.  In fact, I remember the exact same &ldquo;BEST ANIME&rdquo; calls around Full Metal
Alchemist the last time I went to AnimeBoston, and the accompanying tide of Ed &lsquo;n Al Elric cosplays.  This Saturday?  I
don&rsquo;t think I saw even two.</p>

<h3>Cosplays</h3>

<p>Speaking of cosplays, on the whole they have gotten a lot better.  I think as anime fandom grows and evolves, it becomes
less and less acceptable to &ldquo;cosplay&rdquo; by taping together a few pieces of felt and slapping on a $2 wig.  I see a lot
more creativity and a lot more effort all around, and that&rsquo;s a win for everyone.</p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Events/Anime-Boston-2014/i-GBxtNQn/0/L/DSC_2815-L.jpg"></p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Events/Anime-Boston-2014/i-xCZTxB4/0/L/DSC_2847-L.jpg"></p>

<h3>Alpacas</h3>

<p><img class="center" src="http://waffleparadox.smugmug.com/Events/Anime-Boston-2014/i-q353B9K/0/L/DSC_2768-L.jpg"></p>

<p>Alpacas were a big deal this year.  Like really big.  &ldquo;Women want to be with you, men want to become you&rdquo; big.  I have
no idea why.  As far as I can tell they&rsquo;re not from any particular franchise or anything, it&rsquo;s just something that
happened.  &hellip;  Yeah, I got nothing.  They are pretty cute though.</p>

<h3>MARCO?!  POLO!!</h3>

<p>In the sea of new, it was comforting to see some old standbys were still alive and well, like the &ldquo;MARCO POLO&rdquo; meme.  I
know some people have problems with it <em>(dude, why are you at a convention center full of people if you have noise
issues?)</em>, but I find it comforting.  Kind of.  Discomfortingly awkward when someone tries to start and nobody bothers
responding I guess.</p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Events/Anime-Boston-2014/i-X9wkwZh/0/L/DSC_2826-L.jpg"></p>

<p>Also the stair high fives.  I actually don&rsquo;t remember 100% whether this was a thing years ago, but I&rsquo;m choosing to don
my rose-colored glasses and say it is.  Nothing says camaraderie through shared interests like high-fiving strangers on
an escalator.</p>

<p>I do wish the spontaneous Hare Hare Yukai dance parties still happened though&hellip;</p>

<h3>Terrorists</h3>

<p>My least favorite part of the con by far was the newly instituted bag checks.  Apparently they were new this year, and I
think I&rsquo;m not the only one who wasn&rsquo;t a fan.  I&rsquo;m told it was the Mayor&rsquo;s office&rsquo;s idea.  While I understand the safety
risks of having this many people in one place at once, I just wish the process worked a bit better.  As the day went on
and more swag was had, it became progressively more and more difficult to go back and forth between &ldquo;convention&rdquo; and
&ldquo;non-convention&rdquo; areas for food/coffee/what have you&mdash;and God help you if you have any techie-looking equipment in
complicated bags.  It was like a grab-bag of bite-sized TSA experiences.  Complete with drug sniffing dogs!</p>

<p>&hellip;  Alright, that&rsquo;s not fair.  The dogs were pretty cool.  My point still stands though.</p>

<p><em>(Full album <a href="http://waffleparadox.smugmug.com/Events/Anime-Boston-2014/">here</a>)</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Hipster Garlic Bread - Week 9, Garlic]]></title>
    <link href="http://alexkuang.github.io/blog/2014/03/22/hipster-garlic-bread-week-9-garlic/"/>
    <updated>2014-03-22T06:05:00-04:00</updated>
    <id>http://alexkuang.github.io/blog/2014/03/22/hipster-garlic-bread-week-9-garlic</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Hipster-Garlic-Bread/i-XZVS2Lh/0/L/DSC_2581-L.jpg"></p>

<p>Garlic is such an ubiquitous ingredient that I could have easily <a href="http://alexkuang.com/blog/2013/11/17/roast-leg-of-lamb/">cheated</a>
my way around this week&rsquo;s theme.  But where&rsquo;s the fun in that?  In the end, the decision came down to the deliciousness
of garlic bread and my curiosity for the concept of &ldquo;pull-apart bread&rdquo;, something that has been on the rise on
instagrammy/pinteresty/otherwise-artsy-craftsy sites lately.  The result was the above: some sort of garlic pull-apart
boule that&rsquo;s kind of a cross between your typical &ldquo;pull-apart bread&rdquo; and a hasselback potato.</p>

<!-- more -->


<p>There isn&rsquo;t really too much to write about; this is one of those things that an autistic monkey could probably do, which
makes it a great go-to for party prep.  But here are some general guidelines anyway.  For ingredients:</p>

<ul>
<li>1 sourdough boule, roughly the size of your face</li>
<li>1+ stick (~113 grams) of butter, room-temp</li>
<li>1+ bulb of garlic</li>
<li>sliced mozzarella</li>
<li>thyme</li>
<li>bacon (optional, but who doesn&rsquo;t like bacon?)</li>
</ul>


<p>Yeah, you read the butter quantity right.  Those are rough estimates, but I&rsquo;d say they&rsquo;re absolute bare minimums for the
butter and garlic.  If you cared that much about your health, why are you anywhere near a recipe that combines bread,
butter, and cheese in the first place?  Anyone who does this might as well do it properly and enjoy the full flavor; in
for a penny, in for a pound.  As for the garlic, well&hellip;  The toothbrush is an amazing invention, and chewing gum isn&rsquo;t
a terrible fallback.  As for the actual prep:</p>

<ol>
<li>Fire up the oven at 375 F</li>
<li>Chop off the top of the garlic horizontally, so that you get a nice cross-section view of all the cloves.  Stick it
in the oven to roast.  I&rsquo;d say about 30 minutes.</li>
<li>While that&rsquo;s happening, slice the bread and make a ~1.5in grid.  Just make sure to stop cutting about &frac14;-&frac12; inch
before hitting the bottom of the bread.</li>
<li>After the garlic is done, extract your cloves with a fork; they should be pretty mushy at this point.  Mash it
together with the softened butter, making sure to get the garlic nice and pasty and incorporated.  If you&rsquo;re using
unsalted butter, a nice dose of salt would be a great idea at this point.

<ul>
<li>Note: For those who store butter in the fridge and are lazy, melting the butter with the garlic will also work
here; however, melting it fully will make even distribution in the bread harder.</li>
</ul>
</li>
<li>Spread the garlic butter using a knife, and really get it into the cracks.  Shank the bread like you&rsquo;re in a state
prison and it looked at you wrong.</li>
<li>Stuff it some more with thyme, mozzarella, and so on.  Bake in the oven for, oh I dunno, ~30 minutes, depending on
the size of the bread.</li>
</ol>


<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Hipster-Garlic-Bread/i-BSbTwgh/0/L/DSC_2576-L.jpg"></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Instant Ramen Gnocchi - Week 8, TV Show Inspired]]></title>
    <link href="http://alexkuang.github.io/blog/2014/03/11/instant-ramen-gnocchi-week-8-tv-show-inspired/"/>
    <updated>2014-03-11T22:19:00-04:00</updated>
    <id>http://alexkuang.github.io/blog/2014/03/11/instant-ramen-gnocchi-week-8-tv-show-inspired</id>
    <content type="html"><![CDATA[<p><em>(In which I am served a massive slice of humble pie)</em></p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Instant-Ramen-Gnocchi/i-HPM7fVm/0/L/DSC_2602-L.jpg"></p>

<p><em>Mind of a Chef</em> is not just great background noise for getting work done, it also pads out the list of cool and
unusual things I&rsquo;d like to try in the kitchen.  Out of all the things I&rsquo;d seen on the show, making gnocchi out of ramen
seemed among the most unusual and also among the simplest, so I decided it would be a prime target for this week&rsquo;s &ldquo;TV
Show Inspired&rdquo; theme.</p>

<!-- more -->


<h2>The Failure</h2>

<p>Because of its apparent simplicity, I decided to take this on on the night before my flight.  In an uncharacteristic
bout of hubris, my thoughts went something like&hellip; <em>It&rsquo;s just instant ramen blended with milk, right?  No need for a
methodical approach or anything, just toss everything in.</em>  Of course, as the Universe is wont to do, my sloppiness was
rewarded promptly with miserable failure.</p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Instant-Ramen-Gnocchi/i-mzq93d8/0/L/DSC_2469-L.jpg"></p>

<p>I started off by boiling the ramen in milk, and dumping all of it into a food processor with a bunch of egg yolks.  The
first hint that things were off probably should have come at this stage.  The dough held a consistency that was closer
to batter than anything, and there were far too many lumps to be normal.</p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Instant-Ramen-Gnocchi/i-FsDKq22/0/L/DSC_2470-L.jpg"></p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Instant-Ramen-Gnocchi/i-fNZCkgb/0/L/DSC_2474-L.jpg"></p>

<p>As anyone who isn&rsquo;t an idiot should have predicted <em>(ahem)</em>, as soon as the mixture was piped into boiling water, it
completely fell apart.  Even reducing the pot to a bare simmer, it could not hold together at all, and just ended up a
lumpy mess.  I tried frying the results of this, and piping the raw batter straight into the pan, but there&rsquo;s just no
fighting physics.</p>

<p>The best that could have happened here would have been something resembling a grit cake, and that would require some
stabilization in the way of flour / eggs / what-have-you, which I didn&rsquo;t have since I&rsquo;d cleaned out my food supplies in
preparation for my 2-week trip the next day.  &hellip;  Yep.</p>

<p>On hindsight, it&rsquo;s pretty easy to spot the things that went wrong:</p>

<ul>
<li>First off, the ramen should not have been boiled.  By the time it&rsquo;s finished boiling, it&rsquo;s already absorbed all the
liquid it can, which means that it will not integrate with any more that&rsquo;s added, no matter how much time it spends in
the food processor.</li>
<li>Along the lines of the above, I should have used much much less liquid, since I want barely enough to turn the ramen
into a dough.</li>
<li>The eggs yolks were added way too soon into the mixture.  The residual heat from the boiling liquid probably cooked
the yolks before they could be integrated, resulting in more of lumps and robbing the dough of any thickening effects
from the yolks overall.</li>
</ul>


<h2>The Retry</h2>

<p>With that spectacular SNAFU under my belt, I&rsquo;d resolved that I&rsquo;d make another proper attempt as soon as I touched back
down in Boston.  Luckily, this time went much better&mdash;Good enough to actually write out, in fact.  Here are the
ingredients I eventually settled on:</p>

<ul>
<li>500ml whole milk</li>
<li>4 egg yolks</li>
<li>2 packs instant ramen (I used Nong Shim, ~119g apiece)</li>
</ul>


<p>First off, boil 500ml milk.  Break the ramen bricks up and soak them in the milk.  There should be just barely enough
milk to cover.  Take the ramen out as soon as they become pliable enough to no longer be considered bricks&mdash;this should
only take a minute, two tops.  Dump the ramen with ~200ml of the milk into a food processor, and blend until it reaches
a dough-like consistency.  <em>(Note: I have a decently sturdy Cuisinart, and the dough had enough thickness to make it
move, so I&rsquo;d say aim for something along those lines)</em>  When everything is mixed together and cool enough to touch, add
the egg yolks and give it another few pulses to incorporate.</p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Instant-Ramen-Gnocchi/i-SFK4xfS/0/L/DSC_2584-L.jpg"></p>

<p>Now that looks like a proper dough.  Bring a large pot of salted water to boil, then scoop the dough into a pastry bag
(a ziploc with the corner cut out also works).  Pipe out an inch or so at a time into the water, slicing pieces off with
a straight edge.  I used the back of a paring knife for this part.</p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Instant-Ramen-Gnocchi/i-mrqgdF2/0/L/DSC_2589-L.jpg"></p>

<p>Never have I been so glad to see my food looking like poo in a toilet.</p>

<p>As soon as the pieces start floating, get them onto a greased plate.  Fry in butter, then serve as preferred.</p>

<h2>Impressions</h2>

<p>DISCLAIMER: I realized soon after tasting these that I have not actually had potato gnocchi before, so I have nothing to
draw a comparison to.  I&rsquo;ll make it a point to get some from Whole Foods or something ASAP.</p>

<p>Overall the gnocchi had a very interesting texture.  For reasons unknown, I&rsquo;d always expected these to have more bite or
chew to them, but they tasted more creamy than anything.  Simultaneously, they were much heavier than I thought they
would be.  No big surprise here, since they&rsquo;re just pulverized starch and milk.  In the headline picture I served them
with pork belly and spinach, and for my second portion I used pork and miso corn.  Both times I was going for a sort of
&ldquo;deconstructed ramen&rdquo; theme, which worked out fairly well.  The only thing I&rsquo;d change is the portion size&mdash;Something
this heavy is much better suited as an appetizer or a first course.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[New Belt!]]></title>
    <link href="http://alexkuang.github.io/blog/2014/03/08/new-belt/"/>
    <updated>2014-03-08T21:59:00-05:00</updated>
    <id>http://alexkuang.github.io/blog/2014/03/08/new-belt</id>
    <content type="html"><![CDATA[<p>Normally I try to keep the &ldquo;dear diary&rdquo; factor on the blog low.  But in all the bustle of settling back into the east
coast with a new work arrangement, I all but forgot about the whole blogging thing until roughly 2 minutes ago.  So if
you&rsquo;re one of the ones who reads this for what little informational value I manage to provide, or are otherwise
uninterested in participating in this rare bout of masturbatory self-congratulations, here&rsquo;s your cue.</p>

<p>Still here?  So&hellip;  I got my blue belt in BJJ recently.  For anyone unfamiliar, it&rsquo;s basically the &ldquo;hurrah, you&rsquo;re no
longer a rookie&rdquo; rank, and in all seriousness this is one of my prouder moments.  Why?  Because of all my regular
activities, BJJ is the one where I have absolutely no talent whatsoever.  Seriously.  It took me a solid 2 years to get
to this point, and every day of that was spent with the mat being wiped by my face.  Ask anyone at the gym: I still get
rag-dolled on a regular basis.</p>

<p>Now, as a software developer (and all-around lazy nerd) I have a propensity to approach most problems by a) finding an
easier way to do it, b) deciding it&rsquo;s not worth the time, or c) see (a).  It&rsquo;s an approach that works for software, for
games, and probably for most challenges you&rsquo;re likely to find in the first world.  But it&rsquo;s great having proof that
sometimes you just have to show up and grind through and that&rsquo;s the only way to improve.  It&rsquo;s a reminder that
surprisingly often, the only actual obstacle is just you being a giant chicken and unwilling to leave your comfort zone.</p>

<p>So, as the kid who couldn&rsquo;t do a single push-up and ran a 13 minute mile in school, I&rsquo;d like to give myself a pat on the
back for managing to get this far.  And despite all the split lips, swollen fingers, and sprained joints, I sure hope I
get a lot farther in the future.</p>

<p>Oh, and&hellip;  I kind of lied about the lack of material.  I had another 52-weeks post lined up, but the experiment failed
horribly.  I&rsquo;m just buying time so I can do a second iteration and save SOME face, so&hellip;  Look forward to that one.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Corn with Miso Butter - Week 7, Poaching]]></title>
    <link href="http://alexkuang.github.io/blog/2014/02/28/corn-with-miso-butter-week-7-poaching/"/>
    <updated>2014-02-28T20:34:00-05:00</updated>
    <id>http://alexkuang.github.io/blog/2014/02/28/corn-with-miso-butter-week-7-poaching</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Miso-Corn/i-RCTZjJw/0/L/DSC_2447-L.jpg"></p>

<p>It&rsquo;s my last day on my trip to the West Coast, and I&rsquo;ve just finished packing, so what better time to make sure I meet
my self-imposed weekly blog quota?</p>

<p>I&rsquo;ll be perfectly honest here: I find poaching to be kind of boring in and of itself.  Most of the time I see it used
as an excuse for health nuts to abandon any semblance of flavor, and I&rsquo;d be lying if I said I wouldn&rsquo;t likely prefer
whatever is being served to be deep fried instead.  That said, there are cases where poaching a protein can be
delicious.  Salmon is usually a good bet, and poaching a whole chicken can make for some awesome soup as long as
care is taken not to overcook it.  I chose to go with something simpler this week&mdash;a poached egg&mdash;since it&rsquo;s dead easy
and there&rsquo;s very little that matches the luxury of a runny yolk.  The corn with miso butter for this particular setup is
shamelessly stolen from David Chang&rsquo;s <em>Mind of a Chef</em>.  (Which, by the way, for anyone who hasn&rsquo;t watched&mdash;I highly
recommend it.)</p>

<!-- more -->


<h2>Egg</h2>

<p>Since the theme is technically poaching, I&rsquo;ll lead with the egg.  Plus, it makes the timing a bit easier.  The process
is super simple&mdash;A few inchaes of simmering water with a few drops of vinegar, 2.5 &ndash; 3 minutes depending on the size of the
egg.  I&rsquo;d err towards 3 for large eggs straight from the fridge.  Just a few notes for those of us who are
poaching-challenged:</p>

<ul>
<li>Use only a few inches of water; if the water is too deep, that just gives the egg more room to scatter as it falls.</li>
<li>Yes, the vineger helps.  The acid helps bind the proteins in the water, and makes life a tiny bit easier.</li>
<li>No, the taste won&rsquo;t carry over to the egg unless half the bottle&rsquo;s gone into the pot; a light drizzle is plenty
enough.</li>
<li>Making a whirlpool and dropping the egg into the middle may help it stick together as well.  I find that a bit hit or
miss, personally.</li>
<li>After poaching, the egg should be kept in cold/icy water.  This will stop the cooking and conveniently wash off
whatever traces of vinegar happen to linger.</li>
</ul>


<h2>Corn</h2>

<p>Take 1 tsp room-temp butter with 1 tsp white (<em>shiro</em>) miso and beat the crap out of them until everything is mixed
together.  No, seriously&mdash;beat it like it&rsquo;s been saying uncouth things about your mother.  There should be no streaks
left.  (If, like me, any readers happen to fall into the intersection between <em>lazy</em> and <em>keeps butter in the fridge</em>,
microwaving a few seconds helps soften things up&hellip;)</p>

<p>Next, crisp up some bacon in the pan, and set aside on paper towels to dry.  I guess technically you could skip the
bacon here&hellip;  If you <strong>hate happiness</strong>.  Either way, make sure to drain the pan of the bacon fat.  The miso will be
plenty salty even without the help of bacon fat.  Bring the pan back up to searing heat, and add a drizzle of canola
oil.  Fry up about 2 cups of corn kernels until they start browning.  If the kernels start popping and leaping around,
dial the heat back a little&mdash;think roast corn, not popcorn.</p>

<p>After it starts browning, add the miso butter.  Wait a few seconds and really enjoy the smell of that, then deglaze with
a bit of water or any stock that happens to be lying around.  Toss another few times, then plate with the bacon, the
poached egg, and some chopped scallions.</p>

<p>Seriously dead simple, and probably one of the best &ldquo;bang for buck&rdquo; dishes I can think of.  Here&rsquo;s the dish
pre-yolk-pop:</p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Miso-Corn/i-wNF2Mq7/0/L/DSC_2444-L.jpg"></p>

<p>&hellip; and a few more pictures <a href="http://waffleparadox.smugmug.com/Food/Miso-Corn">here</a>.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Jamaican Beef Patty - Week 6, Jamaican]]></title>
    <link href="http://alexkuang.github.io/blog/2014/02/22/jamaican-beef-patty-week-6-jamaican/"/>
    <updated>2014-02-22T13:02:00-05:00</updated>
    <id>http://alexkuang.github.io/blog/2014/02/22/jamaican-beef-patty-week-6-jamaican</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Jamaican-Beef-Patty/i-gFrttbp/0/L/DSC_2467-L.jpg"></p>

<p>Living out of a hotel room in San Francisco makes it pretty hard to complete any sort of themed cooking challenge.
Luckily, I had the wherewithal to go one or two challenges ahead and snap up some appropriate pictures.  Unluckily, I
was a dunce and left the notes on the ingredient amounts at home&hellip;  Times like this I wish that Octopress had a proper
draft feature so I could just write the entire post out ahead of time.  As it is, everyone will have to settle for a
<a href="http://waffleparadox.smugmug.com/Food/Jamaican-Beef-Patty/i-LsmL2g8">photo</a> of the meez for &frac12; lb of beef, and some
quick notes from memory:</p>

<ul>
<li>The seasonings in the photo are salt, allspice, paprika, garlic, scotch bonnets, and thyme.  Basically, the beginnings
of a slightly ghetto jerk seasoning.</li>
<li>The crust was built kind of like your standard shortcrust pie dough.  The only thing is that I found a lot of places
recommending vegetable shortening.  We don&rsquo;t abide by shortening in my house, so I just replaced it with a slightly
smaller quantity of butter.  It also contained a bit of turmeric, hence the brilliant yellow color.</li>
<li>Prep was simple: saute everything, wrap in dough, bake at 375 for about 25 minutes.</li>
</ul>


<p>The result tasted just about how you&rsquo;d expect the above combination to taste: like a curry beef pie.  I&rsquo;d shaped these
into a rough slightly-bigger-than-pierogi sort of shape, but that left an unsatisfying amount of filling per bite.  Next
time I&rsquo;d probably go with something like McDonald&rsquo;s Apple Pie size.</p>

<p>Unfortunately, even with that hypothetical improvement I found the patties a bit flat and boring.  I guess it&rsquo;s because
curry meat pie-like constructs were a mainstay of my childhood, and most of the time the Chinese version was made with
puff pastry which I vastly prefer to shortcrust.  Plus, I&rsquo;ve read that the most common way to eat the Jamaican patties
is stuffed inside coco-bread (a soft roll made with coconut milk), and the thought of the bread starch on top of the
crust starch just grosses me out.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[I'm baaaaack]]></title>
    <link href="http://alexkuang.github.io/blog/2014/02/10/im-baaaaack/"/>
    <updated>2014-02-10T20:56:00-05:00</updated>
    <id>http://alexkuang.github.io/blog/2014/02/10/im-baaaaack</id>
    <content type="html"><![CDATA[<p>It&rsquo;s been nearly two years since I&rsquo;ve done any serious baking and pastry work.  One part of it was graduating into a
full-time job that meant most of my time would be spent away in an office instead of at home keeping an eye on my dough
or batter or what have you.  The other part is my current apartment&rsquo;s oven being&hellip;  How do I put this politely&hellip;  a
piece of shit.</p>

<p>But the other day&rsquo;s challenge with the panna cotta ended up rousing the baker in me more than I&rsquo;d expected, and when
everyone around me started discussing macarons, I had a pretty bad case of my equivalent of the withdrawal shakes.  So I
figured I&rsquo;d take a shot at beating my oven into submission; after all, even with a proper oven I&rsquo;d MacGuyver&rsquo;d my way
out of worse things back in school.  The result?</p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Oneshots/i-Bb46M8t/0/L/macred1-L.jpg"></p>

<p>Far from perfect, but it&rsquo;s good to know that my hands haven&rsquo;t completely rusted off.  And with the recent changes in
lifestyle, hopefully I&rsquo;ll be able to get back into more interesting experimentation as well; just have to be more
careful about not repeating the college experience and gaining a ton of weight along the way.</p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Oneshots/i-tR5PPpB/0/L/macred2-L.jpg"></p>

<p>A shot of the shells as a bonus.  My piping still kind of sucks and I definitely need to practice and tweak more, but
overall it could have been much worse.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Panna Cotta with Apple Compote - Week 5, Vanilla]]></title>
    <link href="http://alexkuang.github.io/blog/2014/02/08/panna-cotta-with-apple-compote-week-5-vanilla/"/>
    <updated>2014-02-08T10:52:00-05:00</updated>
    <id>http://alexkuang.github.io/blog/2014/02/08/panna-cotta-with-apple-compote-week-5-vanilla</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Panna-Cotta-with-Apple/i-gpKW6cR/0/L/DSC_2421-L.jpg"></p>

<p>The few times I&rsquo;ve used vanilla have always been for dessert, so for this week&rsquo;s challenge I really wanted to try
something savory.  Unfortunately I couldn&rsquo;t think of anything that didn&rsquo;t sound horrifying even in my head, so I ended
up going with a dessert anyway; tough nuts.  To be fair though, I stuck with the spirit of leaving my comfort zone and
made multiple things I&rsquo;ve never done before&mdash;panna cotta and apple compote.</p>

<!-- more -->


<p>Since this was my first attempt, I feel like everything could still use some fine-tuning, but overall the results were
acceptable (more on that below), so I&rsquo;ll jot down the quantities and everything just for reference.</p>

<h2>Apples</h2>

<ul>
<li>2 braeburn apples</li>
<li>200g sugar</li>
<li>8g pectin</li>
<li>1 vanilla bean</li>
</ul>


<p><strong>A quick note on pectin:</strong>  Pectin comes in many forms.  The top differentiator is high or low methoxy
pectin, which dictates what kind of environment the pectin needs to set.  Generally speaking, unless you&rsquo;re shopping at
the modernist pantry, high-methoxy pectin is what you&rsquo;ll be getting.  HM pectin sets in an acidic environment, which is
why most of the time it&rsquo;s already cut with a little bit of citric acid when sold.  This is perfectly fine.  Of course, HM
pectin is itself differentiated by how fast it sets: Rapid set, medium set, and so on.  In this case, it shouldn&rsquo;t
matter too much, as any common consumer pectin that&rsquo;s labeled as suitable for jam should be around the right range, but
it&rsquo;s still worth noting since the variation in citric acid + pectin type is what accounts for some brands of pectin not
working with some types of fruit.</p>

<p>The first part is fairly easy.  Dice up the apples into small &frac12; inch chunks (for the more particular among us, I ended
up with roughly 240g apple).  Combine it with the sugar, pectin, and vanilla bean, and put everything on low heat.  The
sugar should start melting fairly quickly, and the apples will start bubbling as they cook, like so:</p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Panna-Cotta-with-Apple/i-nrDwR7n/0/L/DSC_2395-L.jpg"></p>

<p>Keep the apples on low heat until they are completely cooked through and translucent; this should take about 45 minutes.
In the above photo, a few of the chunks in the center and to the left are starting to get there.  Be careful not to burn
anything, and give the pot a stir every once in a while.</p>

<p>After the cooking, they should basically look like jelly.  At this point, the seeds from the spent vanilla pod can be
scraped out and combined with the apples, but that&rsquo;s optional.  Stick everything in a ball jar (or other container of
choice) and chill in the fridge.</p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Panna-Cotta-with-Apple/i-DtBs7C2/0/L/DSC_2405-L.jpg"></p>

<h2>Panna Cotta</h2>

<ul>
<li>600ml cream</li>
<li>3 sheets of gelatin (~5g)</li>
<li>50g sugar</li>
<li>1 vanilla bean</li>
<li>4 cardamom pods</li>
</ul>


<p>First thing is to bloom the gelatin in cold water, using whatever timing the manufacturer recommends.  Pierce the
cardamom pods to help let the flavor out&mdash;either use your hands to crack them a bit, or score the pods with a knife.
For the sugar, just split the bean down the middle and scrape out the seeds.  Because of the moisture, the seeds often
come out feeling more like a paste; just knead it into the sugar with your fingers to prevent clumps in the final
product.</p>

<p>Add about 50ml of the cream to the sugar, and whisk&mdash;Again, this is just to prevent any clumping that may occur.  Add
the rest of the cream, and the cardamom pods, and bring everything to a light simmer&mdash;be careful that it doesn&rsquo;t come to
a full rolling boil.  Hopefully the gelatin has bloomed by now, so add that and let it simmer for another minute or two.
Pour the cream into whatever containers are appropriate, and let everything set in the fridge.  I recommend at least 3-4
hours, preferably overnight.</p>

<h2>Impressions</h2>

<ul>
<li>The apples came out way denser than I expected.  I&rsquo;ve never worked with pectin before, but I think the big mistake was
not accounting for the naturally occurring pectin in the fruit itself.  On hindsight, given how the most commonly sold
pectin is <em>apple pectin</em>, this was kind of a dunce cap moment.</li>
<li>The fruit was also way stronger and sweeter than I expected.  Next time I might dial down the sugar/vanilla in the
fruit, serve less of it, or just not combine it with something as delicate as panna cotta.  Haven&rsquo;t quite decided on
that one yet.</li>
<li>The panna cotta did not have gelatin problems (thankfully), but it was still a bit dense.  For the next try I might
cut the cream down with some milk, probably about 500ml cream to 100ml milk.</li>
<li>The cardamom also didn&rsquo;t come out as much as I would have liked.  It was just barely noticeable if tasting the cream
alone, so I think in the future a full 6 pods for 600ml liquid would be better.  Or even more if being served with
something as strong as a fruit compote.</li>
<li>Now that I think about it, maybe I&rsquo;d be better of cutting out the fruit and serving the panna cotta alone with some
sugar syrup that I&rsquo;ve steeped with cardamom pods.</li>
</ul>

]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[IAP and Mobile]]></title>
    <link href="http://alexkuang.github.io/blog/2014/02/03/iap-and-mobile/"/>
    <updated>2014-02-03T21:43:00-05:00</updated>
    <id>http://alexkuang.github.io/blog/2014/02/03/iap-and-mobile</id>
    <content type="html"><![CDATA[<p>In-app purchases and the free-to-play model have long been anathema to self-declared &ldquo;real gamers&rdquo; everywhere, but the
recent release (or re-release?) of classics like Tales of Phantasia and Dungeon Keeper seems to have brought yet
another wave of angry discussion to the forefront.  Understandably, people
<a href="http://www.baekdal.com/opinion/how-inapp-purchases-has-destroyed-the-industry/">are</a>
<a href="http://kotaku.com/a-cancer-thats-eroding-the-market-reactions-to-eas-1515121353">very</a>
<a href="http://www.escapistmagazine.com/articles/view/editorials/reviews/10956-Dungeon-Keeper-Mobile-Review-Wallet-Reaper">angry</a>
<a href="http://toucharcade.com/2014/01/27/tales-of-phantasia-review/">that</a> their beloved classics are being turned into f2p
&ldquo;cash farms&rdquo;, but personally I think saying the model is &ldquo;destroying the industry&rdquo; is a bit hyperbolic.</p>

<p>In response, toucharcade recently published a post pointing out an article that takes a <a href="http://toucharcade.com/2014/02/03/iap-isnt-actually-destroying-the-games-industry/">stance to the
contrary</a>.  The original piece is
definitely worth a read to anyone who cares about the topic; it makes a number of good arguments regarding pricing
pressures and facing a realistic economy for the unprecedented levels of competition on iOS.  But it also notes that the
concept of paying for more content&mdash;the &ldquo;original IAP&rdquo;&mdash;dates back to the beginning of the industry with coin op arcade
machines.  This seems like a valid comparison superficially, but as someone who&rsquo;s shelled out way too many quarters on
the likes of Gauntlet Dark Legacy I feel like there are two fundamental differences that this argument glosses over.</p>

<p>First: arcade games always had a large skill component.  It might take a while to get good enough, but it was always
possible to beat the game consistently on sheer skill alone.  The game might have been hard, but the balance was never
so broken as to render completion impossible without the extra coins.  Second: in the cases of the most nefarious IAPs,
you&rsquo;re not paying to spend more time with the game; you&rsquo;re paying for the exact opposite.  When an IAP does nothing but
shorten a timer or increase a premium resource, you&rsquo;re essentially paying more money to decrease the time you spend with
the game.  All &ldquo;Skinner&rsquo;s Box From Hell&rdquo; arguments aside, that is probably what I object to the most.  I don&rsquo;t have an
indiscriminate hatred for the f2p model&mdash;there are definitely cases of it being executed well&mdash;but I have a fundamental
problem with paying more for less.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Raclette - Week 4, Things You Hated as a Kid]]></title>
    <link href="http://alexkuang.github.io/blog/2014/01/28/raclette-week-4-things-you-hated-as-a-kid/"/>
    <updated>2014-01-28T06:44:00-05:00</updated>
    <id>http://alexkuang.github.io/blog/2014/01/28/raclette-week-4-things-you-hated-as-a-kid</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Oneshots/i-gvTHKVq/0/L/DSC_2393-L.jpg"></p>

<p>Being your token asian immigrant, my experience with cheese was limited to Kraft slices and string cheese.  Now, there&rsquo;s
nothing wrong with good american cheese on a burger, but I hated string cheese with a burning passion&mdash;Especially when
my mom wanted me to eat some as a snack, citing something or other about calcium and strong bones.  <em>Pfft</em>.  Subsequent
exposure to the likes of cheez-whiz and store-brand grated parmesan really didn&rsquo;t help, and eventually I just dismissed
cheese as categorically unpleasant.</p>

<p>Since then I&rsquo;ve discovered the miracles of parmesan and mozzarella and even some more exotic ones like morbier and p&#8217;tit
basque.  But the first moment I realized that cheese could be excellent in its own right, and even be a major player in
a proper dish, was with raclette.</p>

<p>Raclette is commonly eaten in the swiss alps.  At its core, it&rsquo;s raclette cheese melted over boiled potatoes, commonly
served with cured meat and some pickles or vegetables in the root family; in the above photo, I went with the common
french pickle <em>cornichon</em> and some prosciutto.  The preparation is as easy as food gets: literally just boiling some
potatoes and melting some cheese (I recommend using a toaster oven or a broiler), and then arranging everything on a
plate.</p>

<p>But despite its simplicity, raclette had a large effect on expanding my worldview in food, so&hellip;  There it is.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Adventures with Mail.app Gremlins]]></title>
    <link href="http://alexkuang.github.io/blog/2014/01/26/adventures-with-mail-dot-app-gremlins/"/>
    <updated>2014-01-26T09:05:00-05:00</updated>
    <id>http://alexkuang.github.io/blog/2014/01/26/adventures-with-mail-dot-app-gremlins</id>
    <content type="html"><![CDATA[<h4>Background</h4>

<p>Usually I don&rsquo;t care too much if an email or two gets dropped en route.  Between spam filters and sometimes-spotty
(cough, mobile) connections, it&rsquo;s not too much of a stretch to assume that things get lost once in a great while.  But
recently I was trying to set up an interview on the other side of the country, so naturally I paid a little more
attention than usual.  Everything was going quite well, correspondence was zipping back and forth, and I&rsquo;d even bought a
plane ticket for the trip.  But then a lull came when it was time to receive confirmation for hotel arrangements and a
rough schedule for the interview process.</p>

<p>Unbeknownst to me, the HR rep had already tried to send the information twice at this point, but for some
reason the emails weren&rsquo;t landing in my inbox.  I sent one last-ditch follow-up when my flight was boarding, and got a
reply with the info (thankfully) right before the plane took off.  Along with the reply, the HR rep mentioned that the
previous emails she&rsquo;d sent had gone to <code>waffles@mochify.com</code>. <em>(aside: While <code>waffles@mochify.com</code> isn&rsquo;t the first email
I&rsquo;d give out professionally, I&rsquo;m thankful it wasn&rsquo;t something like <code>sexbadger69@gmail.com</code> &hellip;  Actually, now I wonder
if that address is open &hellip;)</em></p>

<h4>The technical details</h4>

<p>This was an old address that I&rsquo;d added to my various devices previously, but then removed for inactivity; I certainly
didn&rsquo;t recall sending any recent email from it.  But when I logged in to check the inbox, lo and behold the missing
emails were staring me in the face, along with a few others that had been &ldquo;dropped&rdquo; not too long ago.  Something smelled
fishy.  I checked over my Sent box for my regular email to no avail; all the correspondence was there, with the correct
<code>From</code>s and <code>To</code>s.  I ended up having to dig into the plain-text of the mime header to spot the issue:</p>

<figure class='code'><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
</pre></td><td class='code'><pre><code class=''><span class='line'>From: Alex Kuang &lt;[...]&gt;
</span><span class='line'>Content-Type: multipart/alternative;
</span><span class='line'>    boundary="Apple-Mail=_7DA4001C-0AA1-48BD-80F5-00ACDBCCAE9C"
</span><span class='line'>    Message-Id: &lt;ADFD0F4C-6FE0-41F5-AA68-EF8E9845B360@gmail.com&gt;
</span><span class='line'>    Mime-Version: 1.0 (Mac OS X Mail 6.6 \(1510\))
</span><span class='line'>    X-Smtp-Server: smtp.gmail.com:waffles@mochify.com
</span><span class='line'>[...]</span></code></pre></td></tr></table></div></figure>


<p><em>X-Smtp? What?</em>  After a bit of googling I discovered that Mail.app on the Mac keeps a list of outgoing smtp servers
associated with your mail accounts, which you can see in Preferences &ndash;> Accounts &ndash;> &ldquo;Outgoing Mail Server&rdquo; &ndash;> Edit SMTP
Server List.  The problem is, the entry with the association persists <strong>even after an account is removed from the
list</strong>: when I checked my smtp list, it included an entry for mochify as well as a few other one-off addresses that I&rsquo;d
added and removed in similar fashion.  Most of my email (including <code>mochify.com</code>) is handled by google apps, which means
that the smtp server the entries pointed to were all <code>smtp.gmail.com</code>, and the only difference was the
username/authentication associated.</p>

<p>So what ended up happening here was that I&rsquo;d sent the email from my regular account through Mail.app so it still carried
the correct <code>From</code>/etc.  However, for reasons unknown, the outgoing smtp entry for that account did not work at
that moment.  Since <code>mochify</code>&rsquo;s smtp entry pointed at the same <code>smtp.gmail.com</code> server, I&rsquo;m willing to bet that Mail.app
decided it was a perfectly good fallback, added the <code>X-Smtp-Server</code> MIME header, and sent the email causing this weird
reply-to behavior.</p>

<p>There is a checkbox in account preferences that will lock you into using one-and-only-one smtp server and prevent this
from happening, but honestly after this ordeal I will probably just be even more biased towards composing my email using
the web gmail ui.  I&rsquo;m just glad that everything worked out in the end, and anyway this is a good reminder that I should
be more diligent in setting up auto-forwarding even for email addresses I don&rsquo;t plan on using.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Chicken Shahi Korma - Week 3, One Pot]]></title>
    <link href="http://alexkuang.github.io/blog/2014/01/19/chicken-shahi-week-3-one-pot/"/>
    <updated>2014-01-19T10:06:00-05:00</updated>
    <id>http://alexkuang.github.io/blog/2014/01/19/chicken-shahi-week-3-one-pot</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Chicken-Shahi-Korma/i-KPv4qLJ/0/L/DSC_2381-L.jpg"></p>

<p>One thing I&rsquo;ve noticed about the weekly food challenges is that it syncs very well with my new self-imposed weekly post
quota.  This works out nicely for me, but at the same time it provides a very convenient cop-out from having to write
anything new, e.g. about tech.  While at the end of the day I&rsquo;m still writing more than I would have, I&rsquo;m wondering if
it&rsquo;d be a good idea to stop counting these towards the weekly quota, or only count them partially.  Another option would
be to pick and choose which challenges to limit the volume, but cherry-picking challenges is for weenies.  Thoughts for
the future, I guess.</p>

<p>At any rate, the &ldquo;point&rdquo; of this week&rsquo;s theme is simplicity&mdash;Getting good flavor out of an easy set up, i.e. &ldquo;one pot&rdquo;.
It seemed like a good time to test out my burgeoning indian food skills, but as it turns out the most complicated part
was just the combination of the spices.</p>

<!-- more -->


<h4>Ingredients</h4>

<ul>
<li>Large spices

<ul>
<li>8 green cardamom pods</li>
<li>6 cloves</li>
<li>3-inch stick of cinnamon</li>
<li>3 bay leaves</li>
</ul>
</li>
<li>Small spices

<ul>
<li>1 tsp ground cumin</li>
<li>1 tsp ground coriander</li>
<li>&frac14; tsp ground cayenne</li>
</ul>
</li>
<li>4 lb chicken thighs</li>
<li>1 cup plain yogurt</li>
<li>Handful of chopped cilantro</li>
<li>Handful of slivered blanched almonds</li>
</ul>


<p>Normally for non-baking work I prefer to cook by taste and instinct rather than measuring too precisely.  But in this
case spices can be quite strong, and it&rsquo;ll probably take years before I could do that effectively, so it&rsquo;s better to be
on the safe side.  For the curious, here&rsquo;s roughly what the spice setup looks like for 4 lb of chicken:</p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Chicken-Shahi-Korma/i-JzpM4D6/0/L/DSC_2372-L.jpg"></p>

<p>I like cilantro so I tend to put in a bit extra; most people will probably want a bit less than what&rsquo;s shown above.
Another quick note is that the chicken thighs should preferably come with skin and bone; again, just more flavor that
way.  You could do it with boneless skinless thighs, or even breasts, but come on.</p>

<p>There really isn&rsquo;t much to this, technique-wise:</p>

<ol>
<li><p>First, combine the small spices and cilantro with the yogurt, then season the chicken pieces with salt and pepper.</p></li>
<li><p>Heat up a healthy amount of oil in your pot, then toss in the large spices and give them a quick stir.  Start
browning the chicken on medium-high heat.  The browning can be done in a separate pan, but 1) you&rsquo;d be missing out on
the flavor from the brown bits at the bottom, and 2) the theme is &ldquo;one pot&rdquo; and that&rsquo;d be cheating.  Don&rsquo;t
over-crowd&mdash;You really want the color on there, so work in multiple batches if necessary.  By the time the chicken&rsquo;s
done, the kitchen should already be smelling delicious.</p></li>
<li><p>Remove all the chicken from the pot, keeping the oil from frying, and toss in some almonds.  As soon as they start
browning, re-add all the chicken along with any juices that may have appeared.  Add the yogurt sauce and give it a good
mix, then cover and let everything simmer on low for 20 minutes or so.</p></li>
<li><p>When ready, turn the heat back up and let the sauce reduce.  Stir gently once in a while to make sure nothing is
burning and sticking.  The final thickness of the sauce is ultimately preference, but in western terms it should at
<em>least</em> pass the &ldquo;coat the back of the spoon&rdquo; test and then some.</p></li>
</ol>


<p>And since this is, after all, &ldquo;one pot&rdquo;, here is a picture of everything in one pot <em>(excuse the desaturation, I blame
the steam.)</em>:</p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Chicken-Shahi-Korma/i-M9sWXcq/0/L/DSC_2379-L.jpg"></p>

<p>When everything is ready, serve with basmati rice or a nice piece of flatbread.  And yes, like most curries, this tastes
even better after sitting around for a day or two.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Pierogi - Week 2, Polish]]></title>
    <link href="http://alexkuang.github.io/blog/2014/01/13/pierogi-week-2-polish/"/>
    <updated>2014-01-13T11:07:00-05:00</updated>
    <id>http://alexkuang.github.io/blog/2014/01/13/pierogi-week-2-polish</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Pierogi/i-JHfpDKq/0/L/DSC_2369-L.jpg"></p>

<p>Week 2&rsquo;s theme is Polish, a cuisine that I basically have never touched, or so I thought.  According to the
<a href="http://www.reddit.com/r/52weeksofcooking/comments/1ujvk2/week_2_introduction_thread_polish/">introduction thread</a>,
Polish food involves a lot of meat and potatoes, and the list of example foods included golabki which I&rsquo;d made a bunch
of times already under its Russian name golubtsy.  But choosing that felt too much like cheating, so I went with pierogi
instead.</p>

<p>Since I had only heard of the term pierogi and had no idea what it actually was or what was involved, the first obvious
stop was Google.  A few quick searches revealed that it was the polish equivalent of a filled dumpling/ravioli, and the potato
filling + sour cream in the skin distinguished it from all the other types of dumplings I had seen.  Since the skin
was a bit more foreign and required some resting time, I decided to start with that first.</p>

<!-- more -->


<h4>Skin</h4>

<p>Normally I&rsquo;m the first guy to start screaming about scales and precise weights when anything involves dough, but for
things like dumplings I believe that approximations are perfectly fine, and a scale is probably excessive.
Nevertheless, since this was the first time I decided to jot down some numbers for consistency&rsquo;s sake:</p>

<ul>
<li>250g flour (~2 cups)</li>
<li>50g softened/melted butter (~&frac14; cup)</li>
<li>160g sour cream (~&frac12; cup)</li>
<li>1 egg</li>
<li>pinch of salt</li>
</ul>


<p>I combined the flour with the egg and salt to make a crumbly mixture, then added the butter and sour cream.  The dough
incorporated very easily after a few minutes of working, and was very pliable.  I let it rest for about 30 minutes while
I prepared the filling.  Resting only made the dough even softer because of the relaxing gluten; I also suspect that the
sour cream has a loosening effect like a weaker version of ascorbic acid in puff pastry dough, but I&rsquo;m not 100% on that
so don&rsquo;t quote me.</p>

<h4>Filling</h4>

<p>The filling was exceedingly simple.  I just boiled up some yellow potatoes, and mashed them without liquid.  The
seasoning was salt, pepper, and shredded sharp cheddar; I&rsquo;d say the cheddar was somewhere around 1/3 to &frac12; of the
volume of mash that I had.  After everything was mixed, I stepped away for a cup of coffee (and to let the filling fall
to room temp so it wasn&rsquo;t burning hot, if you care about that sort of thing).</p>

<p>After the filling was prepared and cooled, I rolled out the dough into a ~1/8 inch sheet.  I aimed for something a
little bit thicker than ravioli skins, but not by much.  But since I didn&rsquo;t have a dough cutter and actually needed
circular skins, I decided to use a drinking glass instead:</p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Pierogi/i-QX4VMGK/0/L/DSC_2337-L.jpg"></p>

<p>After pressing out all the rounds, there was a non-trivial amount of dough scrap left which I felt bad about.  I was
feeling daring so I just re-worked and re-rolled it to get as many rounds as possible; the only thing I&rsquo;d note here is
that an additional resting period is necessary for the gluten to re-relax, so I&rsquo;d recommend filling the pressed rounds
while waiting for that to happen.  Or, for the more lazy amongst us, I suppose the scraps could just be cut up and saved
to be dropped in soup or something&hellip;  But who wants to do that?</p>

<p>Wrapping is fairly easy.  Just fold the skin over a small mound of the potato mixture then press the edges together
with your fingers.  If the edges don&rsquo;t stick, you probably over-floured your board or something, so add a bit of water
to help it along.  To really seal things in and make them look prettier, press the edges again with the tines of a fork.
(For those who really care, the gallery at the bottom of the post has how much filling I used for each)</p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Pierogi/i-c2DwTKD/0/L/DSC_2353-L.jpg"></p>

<p>A few of them are slightly lopsided, but not too bad for a first batch.</p>

<h4>Impressions</h4>

<p>Most sources online recommend boiling the pierogis and then frying them with butter and onions to serve.  Since these
are essentially potatoes in dough, I thought they&rsquo;d need a bit of help so I used roughly sliced shallots instead, and
added some kielbasa on the side.  Can&rsquo;t have a &ldquo;meat and potatoes&rdquo; style meal without the meat.</p>

<p>I think the biggest surprise was that pierogis are really &ldquo;go big or go home&rdquo;.  The quantities above are enough to make
roughly 20 skins, or a full two dozen if you really want to stretch it.  The filling needed for that amount of skin
could probably be made from one decent sized yellow potato, <em>maybe</em> two.  And since nobody wants to boil and mash one
potato, that means that you have to make about 100 at once for it to be worth the time.  Alternatively this could
probably be a nice use for leftovers of regular mashed potato, but probably not if you like your mash really creamy.</p>

<p>I can&rsquo;t really speak to authenticity or anything since I&rsquo;ve never actually had pierogis, but I thought they were pretty
nice taste-wise.  Personally they reminded me of fried ravioli, except slightly thicker and more rustic.  I went in
expecting a super heavy mouthful of starch, but the texture was surprisingly light and the sour cream in the skin helped
things along.  I still don&rsquo;t think I&rsquo;d eat these alone, at least not the variety filled with just potato and
cheese&mdash;Even with the shallots, the dish needed the extra punch from the kielbasa.  However, some bacon in the filling
might change my mind.  Adding bacon is never a bad idea.</p>

<p>(Full gallery <a href="http://waffleparadox.smugmug.com/Food/Pierogi">here</a>)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ramen Cake - Week 1, Eggs]]></title>
    <link href="http://alexkuang.github.io/blog/2014/01/06/ramen-cake-week-1-eggs/"/>
    <updated>2014-01-06T13:05:00-05:00</updated>
    <id>http://alexkuang.github.io/blog/2014/01/06/ramen-cake-week-1-eggs</id>
    <content type="html"><![CDATA[<p><em>&mdash;Or, really ghetto okonomiyaki&hellip;</em></p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Ramen-Cake/i-zJ4NmjL/0/L/DSC_2315-L.jpg"></p>

<p>It should come as no surprise to anyone that I&rsquo;m subscribed to
<a href="http://www.reddit.com/r/52weeksofcooking">/r/52weeksofcooking</a>.  The tl;dr is that each week, the subreddit chooses a
food &ldquo;theme&rdquo;&mdash;an ingredient, ethnicity, or some other idea&mdash;and users post dishes that they make according to the theme.
I&rsquo;ve always thought that the idea seemed like a lot of fun, so what better time to start than the new year?  If nothing
else, it makes good blog fodder.</p>

<p>Week 1&rsquo;s theme is eggs, which is a nice and easy start to this little series of experiments.  For this theme I chose
what I like to call &ldquo;ramen cake&rdquo;.  The idea is roughly the same as that of okonomiyaki&mdash;In fact, I got the idea after
watching the corresponding <a href="http://www.youtube.com/watch?v=od2YWgQmeo4">video</a> on Cooking With Dog (an excellent channel
in general, by the way).  It&rsquo;s a nice way to have ramen that doesn&rsquo;t come in a bowl of soup, and with the right
combination of fillings it could even be something approaching nutritious.</p>

<!-- more -->


<p>First, boil your ramen and set aside.  I recommend removing the ramen 30 seconds or so before it&rsquo;s fully cooked.  It&rsquo;ll
continue cooking in the pan later, and overcooking just results in mush&mdash;especially when freeze-dried noodles are
involved.  In the meantime, prepare any other toppings you need as well.  For the pictures in this post I used nong shim
ramen with some sardines and quickly stir-fried bok choy, but basically anything works.  Finally, beat about 3-4 large
eggs (depending on your preferences) until the yolks and whites are evenly incorporated.</p>

<p>Heat up a well-oiled, preferably non-stick, pan over medium-high heat.  Drop the eggs, and as soon as the bottom starts
cooking add the other ingredients and the ramen. Jostle it a bit as necessary to distribute everything, the leave it
alone to set.  Now is a great time to garnish with scallions and add some sauce&mdash;to keep it real, I like using oyster
sauce mixed with part of the ramen packet and a bit of peanut oil to adjust for viscosity.</p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Ramen-Cake/i-xtFsvCZ/0/L/DSC_2304-L.jpg"></p>

<p>When the bottom has solidified enough to handle without disintegrating, it&rsquo;s ready to flip.  Just make sure that the egg
hasn&rsquo;t entirely cooked through yet&mdash;after the flip, we want it to drip downwards a bit and bind all of the ingredients
into one cohesive mass.  Also note that flipping can be a bit hit or miss sometimes, depending on a combination of
spatula size, pan skills, and luck.  One easy option is to cut it into pieces in the pan, and just flip the pieces
individually.</p>

<p>In this case, the culinary gods were with me, and I made the flip successfully:</p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Ramen-Cake/i-BNVnCJp/0/L/DSC_2307-L.jpg"></p>

<p>After the flip, let everything keep frying.  The goal here is to let the rest of the egg cook through and caramelize the
ramen a little bit along the way&mdash;Extra points if the bottom is slightly crispy, like so:</p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Ramen-Cake/i-M4rt2bc/0/L/DSC_2310-L.jpg"></p>

<p>While waiting for everything to cook, feel free to slather on more sauce.  Either way, it should be ready to be shoveled
into faces after a few minutes.</p>

<p>(Full gallery <a href="http://waffleparadox.smugmug.com/Food/Ramen-Cake">here</a>)</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Ramen Stock]]></title>
    <link href="http://alexkuang.github.io/blog/2014/01/04/ramen-stock/"/>
    <updated>2014-01-04T11:45:00-05:00</updated>
    <id>http://alexkuang.github.io/blog/2014/01/04/ramen-stock</id>
    <content type="html"><![CDATA[<p>I&rsquo;ve been sick as a dog for the last couple of days, so I guess this week I&rsquo;ll keep it light.  Since it&rsquo;s about 0
degrees F outside right now, what better time to mention ramen?</p>

<p><img class="center" src="http://waffleparadox.smugmug.com/Food/Oneshots/i-7f9FtLM/0/L/photo-L.jpg"></p>

<p>The above was made with pork belly, spinach, and pickled mushrooms.  I&rsquo;ll probably write everything up in more detail
when I&rsquo;m feeling more prolific, but I&rsquo;d like to take this chance to mention that a great use for the leftover bones
(say, from a roast leg of lamb, or a chicken carcass) is ramen stock.  Just roast the bones in the oven and stick them
in a pot with a few aromatics and vegetables: onions, leeks, carrots, mushrooms, and so on.  Leave it to simmer for a
few hours, and boom.  Stock.  If it&rsquo;s not feasible to leave the stove on, a crock pot would probably work just as well.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[CMD Misadventures - Codebase Size]]></title>
    <link href="http://alexkuang.github.io/blog/2013/12/23/cmd-misadventures-codebase-size/"/>
    <updated>2013-12-23T06:50:00-05:00</updated>
    <id>http://alexkuang.github.io/blog/2013/12/23/cmd-misadventures-codebase-size</id>
    <content type="html"><![CDATA[<p>After watching the <a href="https://www.destroyallsoftware.com/talks/wat">wat</a> talk and trolling my friends with the
<a href="https://www.destroyallsoftware.com/talks/a-whole-new-world">aneditor</a> talk for about the 200th time, I decided to
finally purchase one season of the Destroy All Software screencasts, despite the (IMHO) steep price tag and my financial
destitution.  (So far?  Totally worth it.  But a full review of the screencasts is neither here nor there.)</p>

<p>I&rsquo;ve always been a big fan of the unix power tools&mdash;<code>find</code>, <code>grep</code>, <code>xargs</code>, and so forth&mdash;but the DAS talks introduced
an idea that had never occurred to me for some insane reason: combine them with git to extract some interesting
information about your codebase.  And so, I decided to go diving into my biggest scala project for insights about its
code size.</p>

<p>One of the most common problems that code size can indicate is the presence of &ldquo;god classes&rdquo; or libraries, which know
and do way too much and thus are correspondingly bigger than the rest of the code by orders of magnitude.  This command
was relatively simple and does not involve git, so here it is in its entirety:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>alexkuang@Orion <span class="o">[</span>00:00:00<span class="o">]</span> <span class="o">[</span>~foobar/src/main/scala<span class="o">]</span> <span class="o">[</span>master<span class="o">]</span>
</span><span class='line'>-&gt; % find . -type f -name <span class="s2">&quot;*.scala&quot;</span> | <span class="k">while </span><span class="nb">read </span>file; <span class="k">do </span>wc -l <span class="nv">$file</span>; <span class="k">done</span> | sort -n
</span><span class='line'>       9 ./com/foobar/models/Permission.scala
</span><span class='line'>      11 ./com/foobar/util/LocParams.scala
</span><span class='line'>      14 ./com/foobar/util/OrgSettings.scala
</span><span class='line'>      16 ./com/foobar/security/package.scala
</span><span class='line'>      17 ./com/foobar/scripts/ReloadStageDB.scala
</span><span class='line'>      18 ./com/foobar/scripts/oneoff/InitSchema.scala
</span><span class='line'>      <span class="c"># ...</span>
</span><span class='line'>     231 ./com/foobar/js/Calendar.scala
</span><span class='line'>     247 ./com/foobar/persistence/Access.scala
</span><span class='line'>     287 ./com/foobar/snippet/BookingCalendar.scala
</span><span class='line'>     307 ./com/foobar/lib/Registration.scala
</span><span class='line'>     319 ./com/foobar/lib/Scheduler.scala
</span></code></pre></td></tr></table></div></figure>


<p>The output was slightly interesting, but nothing groundbreaking.  300 lines is not ideal to me, but manageable.  Broken
down quickly, <code>find #...</code> finds all files inside the current directory ending in &lsquo;.scala&rsquo;, reads each file in, and
passes it off to wc -l, which does a linecount on the file, whitespace and all.  <code>sort</code> does what its name implies, with
<code>-n</code> making it sort <code>1 2 3 11</code> instead of <code>1 11 2 3</code>.  The information was slightly cool, but as a hack it&rsquo;s not very
interesting, so let&rsquo;s throw some git in there to try to get a sense of how fast the codebase has grown over time.  After
all, superlinear growth is usually indicative of a ton of repetition and therefore unnecessary code complexity.</p>

<!-- more -->


<p>First, starting with walking the git repo.  <code>git rev-list &lt;branch&gt;</code> should do what we want it to, but in the case of
larger repos it the list can get a bit unwieldy/huge.  Enter <code>awk</code>, which lets you do a bunch of neat things with your
text but most importantly has an easy variable for line number, of all things <em>(note to self: learn2awk better?)</em>, thus:
<code>awk 'NR % &lt;n&gt; == 0'</code> to get only every nth revision list.  Combine that with the same reading as above, and do a
similar scala file find with a linecount, and the command is as follows: <em>(Yes, in this particular project I dev&rsquo;d right
in master instead of using a nvie-style git-flow.  Bad developer, bad!)</em></p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>git rev-list master | awk <span class="s1">&#39;NR % 20 == 0&#39;</span> | <span class="k">while </span><span class="nb">read </span>revhash; <span class="k">do </span>git checkout -q <span class="nv">$revhash</span> | <span class="se">\ </span>
</span><span class='line'><span class="o">&amp;&amp;</span> find . -name <span class="s1">&#39;*.scala&#39;</span> | xargs cat | wc -l; <span class="k">done</span>
</span></code></pre></td></tr></table></div></figure>


<p>The more finicky among us might comment right about now that the command is already pretty huge and nigh unreadable if
revisited in about two weeks&mdash;and he&rsquo;d be right.  But this is a quick one-off hack for some interesting info (something
that unix tools are absolutely amazing at), and if I cared that much I&rsquo;d probably write a real script, or at least
re-format it into a proper bash function.</p>

<p>So the above command gives us a bunch of line counts which is useful, but it doesn&rsquo;t really give us a sense of the
progression.  At this point I&rsquo;d usually either 1) compose some huge complicated thing that kept track of the current
line AND the previous in an attempt to do math, or 2) give up and write a real script for it later, but one of the DAS
videos showed something that was completely new to me: using <code>jot</code> to create a chart.  Even if I learned nothing else,
this alone made everything worth it.  Very quickly&hellip;</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>-&gt; % jot - 1 5
</span><span class='line'><span class="c"># print range 1 to 5</span>
</span><span class='line'>1
</span><span class='line'>2
</span><span class='line'>3
</span><span class='line'>4
</span><span class='line'>5
</span><span class='line'>-&gt; % jot -b <span class="s1">&#39;*&#39;</span> - 1 5
</span><span class='line'><span class="c"># range 1 to 5, printing &#39;*&#39; instead</span>
</span><span class='line'>*
</span><span class='line'>*
</span><span class='line'>*
</span><span class='line'>*
</span><span class='line'>*
</span><span class='line'>-&gt; % jot -b <span class="s1">&#39;*&#39;</span> - 1 5 | xargs
</span><span class='line'><span class="c"># For all its magic, xargs just chunks up your input to be used as args.</span>
</span><span class='line'>* * * * *
</span><span class='line'>-&gt; % jot -b <span class="s1">&#39;*&#39;</span> - 1 5 | xargs | tr -d <span class="s1">&#39; &#39;</span>
</span><span class='line'><span class="c"># And tr to translate.  Side note: as a recovering Perl user, it slightly annoys me that there&#39;s a tr util but not an s</span>
</span><span class='line'><span class="c"># util.  But I guess that&#39;s what sed is for...?</span>
</span><span class='line'>*****
</span></code></pre></td></tr></table></div></figure>


<p>And now all that&rsquo;s left is to combine the <code>jot</code> magic with the above command by reading a the linecount into a variable
called <code>lines</code>, using that in the <code>jot</code> call, and printing everything out.  In the interest of full disclosure, here&rsquo;s
the final command along with the output from my project:</p>

<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
</pre></td><td class='code'><pre><code class='bash'><span class='line'>-&gt; % git rev-list master | awk <span class="s1">&#39;NR % 20 == 0&#39;</span> | <span class="k">while </span><span class="nb">read </span>revhash; <span class="k">do </span>git checkout -q <span class="nv">$revhash</span> <span class="o">&amp;&amp;</span> <span class="se">\ </span>
</span><span class='line'>find . -name <span class="s1">&#39;*.scala&#39;</span> | xargs cat | wc -l | <span class="se">\ </span>
</span><span class='line'><span class="nb">read </span>lines <span class="o">&amp;&amp;</span> <span class="o">((</span><span class="nv">hashes</span> <span class="o">=</span> <span class="nv">$lines</span> / 100<span class="o">))</span> <span class="o">&amp;&amp;</span> <span class="se">\ </span>
</span><span class='line'><span class="nb">echo</span> <span class="s2">&quot;`jot -b &#39;#&#39; - 1 $hashes | xargs | tr -d &#39; &#39;` $lines&quot;</span>; <span class="k">done</span>
</span><span class='line'><span class="c">######################################################### 5700</span>
</span><span class='line'><span class="c">##################################################### 5333</span>
</span><span class='line'><span class="c">################################################### 5151</span>
</span><span class='line'><span class="c">############################################### 4796</span>
</span><span class='line'><span class="c">############################################# 4530</span>
</span><span class='line'><span class="c">##################################### 3786</span>
</span><span class='line'><span class="c">################################### 3528</span>
</span><span class='line'><span class="c">#################################### 3660</span>
</span><span class='line'><span class="c">#################################### 3615</span>
</span><span class='line'><span class="c">################################ 3208</span>
</span><span class='line'><span class="c">############################ 2848</span>
</span><span class='line'><span class="c">############################ 2832</span>
</span><span class='line'><span class="c">############################ 2855</span>
</span><span class='line'><span class="c">########################### 2786</span>
</span><span class='line'><span class="c">######################## 2418</span>
</span><span class='line'><span class="c">##################### 2186</span>
</span><span class='line'><span class="c">################## 1834</span>
</span><span class='line'><span class="c">################ 1664</span>
</span><span class='line'><span class="c">############## 1412</span>
</span><span class='line'><span class="c">############ 1270</span>
</span><span class='line'><span class="c">########### 1179</span>
</span><span class='line'><span class="c">######## 892</span>
</span><span class='line'><span class="c">###### 651</span>
</span><span class='line'><span class="c">#### 420</span>
</span><span class='line'><span class="c"># 138</span>
</span></code></pre></td></tr></table></div></figure>


<p>The growth at the beginning looked pretty normal, and I must say I&rsquo;m slightly happy that around the middle it remained
constant, and even took a slight dip afterwards.  After the dip though it seems like the growth started shooting up
again, which is not a good sign.  This is consistent with my personal experience, as I recall starting to really throw
in the super-hacks at around that time, so everything is probably due for another refactor.</p>

<p>In closing, I&rsquo;d like to remark that while this post was pretty monolithic and it took a lot of text to explain
everything for the first time, in real life this command probably took about 2-3 minutes to write.  And that&rsquo;s what I
find these utils are really really good at&mdash;Quick dirty answers to the little &ldquo;I wonder&hellip;&rdquo; / &ldquo;What if&hellip;&rdquo; questions
that tend to pop up while coding.</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Les Iterables]]></title>
    <link href="http://alexkuang.github.io/blog/2013/12/21/les-iterables/"/>
    <updated>2013-12-21T08:16:00-05:00</updated>
    <id>http://alexkuang.github.io/blog/2013/12/21/les-iterables</id>
    <content type="html"><![CDATA[<p><img class="center" src="http://alexkuang.github.io/images/les-iterables.jpg" width="500"></p>

<blockquote><p>Not very uplifting&#8230;</p><footer><strong>David Pollak</strong></footer></blockquote>


<blockquote><p>Slick production values.</p><footer><strong>Jan Christopher Vogt</strong></footer></blockquote>


<blockquote><p>Wonderful acting!</p><footer><strong>Jonas Boner</strong></footer></blockquote>


<p><em>(Sorry guys, saw this in <a href="http://reddit.com/r/scala">/r/scala</a> and kind of had to.)</em></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[Clojure First Impressions]]></title>
    <link href="http://alexkuang.github.io/blog/2013/12/20/clojure-first-impressions/"/>
    <updated>2013-12-20T14:05:00-05:00</updated>
    <id>http://alexkuang.github.io/blog/2013/12/20/clojure-first-impressions</id>
    <content type="html"><![CDATA[<p>After achieving some measure of familiarity with Scala, and with newfound copious amounts of free time, I decided I
wanted to see more of what the functional world had to offer.  The obvious choices were Haskell and Clojure; but while
Haskell has the upper hand in functional purity and a crazy advanced type system, I like to think I&rsquo;m a pragmatic guy at
heart and Clojure seemed more practical.  I haven&rsquo;t worked with it too extensively, but my experience so far can be
summarized by two words: Simple and composable.</p>

<h4>The language</h4>

<p>Clojure is a refreshingly simple language.  Despite my last foray into a Lisp being about half a decade ago, the
learning curve was much gentler than I&rsquo;d expected.  Maybe it&rsquo;s because I was already in a functional programming
mindset, but the straightforward syntax and <a href="http://clojure-doc.org/">abundance</a>
<a href="http://clojure.org/getting_started">of</a> <a href="http://clojure.org/cheatsheet">documentation</a> probably helped.  And on a
completely subjective level: <code>iDislikeCamelCase</code>, and <code>clojure-case-is-pretty-neat</code>.</p>

<h4>The ecosystem</h4>

<p>Of course, the overall enjoyability of using a language doesn&rsquo;t depend solely on the core language, but also the
libraries and toolchain available.  Most of the libraries I&rsquo;ve seen keep in line with the design of the language: super
lightweight, super simple, super composable, and as a result super easy to ramp up on and use.  Theoretically that
should just describe all good library design in general, but I feel like the clojure community takes it especially to
heart.</p>

<p>Compojure, for example, chose to implement its url
<a href="https://github.com/weavejester/compojure/wiki/Destructuring-Syntax">destructuring</a> to closely follow the destructuring
available in stock Clojure <code>let</code>s expressions.  I can&rsquo;t help but draw the comparison to Scala, where I&rsquo;d be more likely
to find that url decomposition exists only in the form of an exotic DSL.  Another huge example for me is the difference
between the simplicity of the Clojure build tool Leiningen and the craziness of Scala&rsquo;s SBT.  Sorry SBT&mdash;You work very
well, but I&rsquo;d rather not have to google what the <code>&lt;++=</code> operator does every time I touch the build.</p>

<h4>With vim</h4>

<p>One of my original reasons for leaning clojure was its close integration with
<a href="http://www.chris-granger.com/lighttable/">LightTable</a>.  As it turns out, the functionality I liked could be
replicated in vim with <a href="https://github.com/tpope/vim-fireplace">fireplace.vim</a>&rsquo;s quasi-insta-repl and insta-doc, due in
no small part to leiningen and nrepl&rsquo;s awesomeness.
<a href="https://github.com/kien/rainbow_parentheses.vim">Rainbow parentheses</a> is also pretty cool, and has been useful enough
that I will probably keep it on even when I don&rsquo;t have to deal with the hardcore levels of parens in Lisps:</p>

<p><img class="center" src="http://alexkuang.github.io/images/rainbow-parens.png"></p>

<h4>Overall</h4>

<p>If programming languages could be graded on usability, Clojure would get full marks.  It has been a breath of fresh air
after dealing with the crazy complexity in Scala.  Undoubtedly working through the latter had a part in making the
former much easier, and Scala will always have a place with me, but for now I find myself slowly joining the rest of the
Clojure bandwagon.</p>
]]></content>
  </entry>
  
</feed>
